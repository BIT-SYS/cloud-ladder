import org.gradle.internal.os.OperatingSystem
plugins {
    id 'java'
    id 'antlr'
}

group = "cn.edu.bit.cs"
version = "1.0-SNAPSHOT"

repositories {
    mavenCentral()
}

generateGrammarSource {
    arguments += ["-visitor", "-long-messages", "-package", "grammar", ]
    outputDirectory = file("${buildDir}/generated-src/antlr/main/grammar")
}

task generateASTListener(type: Exec) {
    description 'auto-gen AST*.java file'
    workingDir './scripts'
    if (System.getenv("GITHUB_ACTIONS") != null)
        commandLine 'sudo', 'bash', 'listener_gen.sh'
    else if (OperatingSystem.current() != OperatingSystem.WINDOWS)
        commandLine 'bash', 'listener_gen.sh'
    else
        // won't work on WINDOWS
        commandLine 'cmd', '-h'
}

task testASTListener(type: Exec) {
    description 'test if auto-gen AST*.java is up-to-date'
    workingDir './scripts'
    if (System.getenv("GITHUB_ACTIONS") != null)
        commandLine 'sudo', 'bash', 'test_listener_gen.sh'
    else if (OperatingSystem.current() != OperatingSystem.WINDOWS)
        commandLine 'bash', 'test_listener_gen.sh'
    else
    // won't work on WINDOWS
        commandLine 'cmd', '-h'
}

task testGrammar(type: Exec, dependsOn: classes) {
    workingDir './scripts'
    ignoreExitValue true
    if (System.getenv("GITHUB_ACTIONS") != null) {
        println "on ci, use sudo."
        commandLine 'sudo', 'make', 'test'
    } else if (OperatingSystem.current() != OperatingSystem.WINDOWS){
        println "local build"
        commandLine 'make', 'test'
    } else {
        // won't work on WINDOWS
        commandLine 'cmd', '-h'
    }

    standardOutput = new ByteArrayOutputStream()
    errorOutput = new ByteArrayOutputStream()

    doLast {
        String a;
        boolean flag = errorOutput.toString().contains("\nline")
        if (flag || execResult.getExitValue() != 0) {
//            logger.error(errorOutput.toString())
            throw new GradleScriptException(errorOutput.toString(), new Exception())
        }
    }
}

dependencies {
    testImplementation 'junit:junit:4.13'
//    implementation 'org.hamcrest:hamcrest-core:1.3'
    implementation "com.google.code.gson:gson:2.8.6"
    implementation "com.squareup.okhttp3:okhttp:4.6.0"
    antlr "org.antlr:antlr4:4.8"
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
}

if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}

if (OperatingSystem.current() != OperatingSystem.WINDOWS) {
    compileJava.dependsOn += generateASTListener
}
